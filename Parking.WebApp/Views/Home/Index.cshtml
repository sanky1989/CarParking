@model InputViewModel
@{
    ViewData["Title"] = "Parking Home Page";
}

<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
    </ol>

</div>

<div class="row">
    <div class="col-md-10">
        <h2>Generate Car Parking rates</h2>

    </div>

</div>

<div class="row">
    <div class="col-md-5">
        <form method="post" enctype="multipart/form-data" asp-action="Index">
            <div class="form-group">
                @Html.LabelFor(m => m.CarEntryInput, new { @class = "col-md-5 control-label" })
                @Html.TextBoxFor(m => m.CarEntryInput, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "col-md-7 control-label", type = "datetime-local" })
                @Html.ValidationMessageFor(m => m.CarEntryInput, "", new { @class = "text-danger" })
            </div>
            <br /><br />
            <div class="form-group">

                @Html.LabelFor(m => m.CarExitInput, new { @class = "col-md-5 control-label" })
                @Html.TextBoxFor(m => m.CarExitInput, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "col-md-7 control-label", type = "datetime-local" })
                @Html.ValidationMessageFor(m => m.CarExitInput, "", new { @class = "text-danger" })
            </div>

            @if (!String.IsNullOrEmpty(Model.Errors))
            {
                <p class="text-danger">@Model.Errors</p>
            }
            <div class="form-group">
                <input type="submit" value="Calculate Parking Rate" class="btn btn-success" />
            </div>
            @if (!String.IsNullOrEmpty(Model.Results))
            {
                <p class="text-danger">@Model.Results</p>
            }

        </form>
    </div>
</div>
